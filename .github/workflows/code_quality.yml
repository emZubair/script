name: Code Quality

on:
  pull_request:
    types: [ opened, synchronize, reopened ]

permissions:
  contents: write
  pull-requests: write

jobs:
  pylint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: 3.12
        cache: pip

    - uses: technote-space/get-diff-action@v4
      with:
        PATTERNS: |
          **/*.py
          !**/migrations/*
          !**/envs/*
          !common/**/etree.py
        DOT: '...'
        DIFF_FILTER: 'AMRC'
        
    - name: Cache virtualenv
      uses: actions/cache@v3
      with:
        key: venv-${{ runner.os }}-${{ steps.setup_python.outputs.python-version}}-${{ hashFiles('requirements.txt') }}
        path: .venv
        
    - name: Install dependencies
      run: |
        python -m venv .venv
        source .venv/bin/activate
        python -m pip install -r requirements.txt
        echo "$VIRTUAL_ENV/bin" >> $GITHUB_PATH
        echo "VIRTUAL_ENV=$VIRTUAL_ENV" >> $GITHUB_ENV
        
    - name: Generating PyLint report
      id: pylint-report
      continue-on-error: true
      run: |
        pylint ${{ env.GIT_DIFF }} 2>&1 | tee report_pylint.txt

        body=$(cat report_pylint.txt)
        body="${body//'%'/'%25'}"
        body="${body//$'\n'/'%0A'}"
        body="${body//$'\r'/'%0D'}"
        echo ::set-output name=icon::":x:"
        [[ $body == *".py:"* || $body == *"***********"* ]] && title="**Please fix following pylint issues:**"
        [[ ${body:5} == "-----"* ]] && score="Good Job, Pylint Score:" && echo ::set-output name=status::success \
        && echo ::set-output name=icon::":white_check_mark:" && echo ::set-output name=value::10
        echo ::set-output name=score::$score
        echo ::set-output name=title::$title
        echo ::set-output name=body::$body
      if: env.GIT_DIFF

    - name: Creating iSort report
      id: isort-report
      continue-on-error: true
      run: |
        isort ${{ env.GIT_DIFF }} -c 2>&1 | tee report_isort.txt
        sed -i 's#/home/runner/work/smooth-link/smooth-link##g' report_isort.txt

        body=$(cat report_isort.txt)
        body="${body//'%'/'%25'}"
        body="${body//$'\n'/'%0A'}"
        body="${body//$'\r'/'%0D'}"

        echo ::set-output name=icon::":x:"
        title="**Please fix following iSort issues:**"
        [[ ${#body} == 0 ]] && echo ::set-output name=icon::":white_check_mark:" && \
        echo ::set-output name=status::success || (body="\`\`\` %0A $body %0A \`\`\`" \
        && echo ::set-output name=title::$title && echo ::set-output name=body::$body)
      if: env.GIT_DIFF

    - name: Post report on PR
      uses: mshick/add-pr-comment@v1
      with:
        message: |
          **pylint:** ${{ steps.pylint-report.outputs.icon }}
          ${{ steps.pylint-report.outputs.title }}
          ```
          ${{ steps.pylint-report.outputs.score }}${{ steps.pylint-report.outputs.body }}
          ```
          
          **iSort:** ${{ steps.isort-report.outputs.icon }}
          ${{ steps.isort-report.outputs.title }}
          ${{ steps.isort-report.outputs.body }}
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        repo-token-user-login: 'github-actions[bot]'
      if: env.GIT_DIFF


    - name: No py file, post comment on PR
      uses: mshick/add-pr-comment@v1
      with:
        message: |
            No python file in PR. **Looks good** :+1:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        repo-token-user-login: 'github-actions[bot]'
      if: env.GIT_DIFF == ''

    - name: Check pylint score

      uses: actions/github-script@v3
      with:
        script: |
          core.setFailed('Pylint score is not up to the mark!')
      if: ${{ env.GIT_DIFF != '' && steps.pylint-report.outputs.value != 10 }}
